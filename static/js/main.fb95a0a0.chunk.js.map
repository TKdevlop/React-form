{"version":3,"sources":["NavBar/NavBar.js","UserDetails/UserDetails.js","PersonalDetails/PersonalDetails.js","Confirm/Confirm.js","Success/Success.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","root","flexGrow","grow","textAlign","fontSize","menuButton","marginLeft","marginRight","props","classes","page","react_default","a","createElement","className","AppBar_default","color","position","Toolbar_default","IconButton_default","aria-label","Menu_default","Typography_default","variant","UserDetails","style","padding","maxWidth","margin","TextField_default","name","value","firstNameValue","onChange","firstName","fullWidth","label","type","lastNameValue","lastName","emailValue","email","Button_default","onClick","nextStage","OccupationValue","Occupation","cityValue","city","bioValue","bio","prevStage","Confirm","gutterBottom","noWrap","occupation","Success","useEffect","App","state","stage","pages","handleChange","_ref","_ref$target","target","_this","setState","Object","defineProperty","prevState","_this2","this","NavBar","PersonalDetails_UserDetails","occupationValue","GetCurrentComponent","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fb95a0a0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n    textAlign: \"center\",\r\n    fontSize: 24\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20\r\n  }\r\n};\r\n\r\nfunction ButtonAppBar(props) {\r\n  const { classes, page } = props;\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar color=\"secondary\" position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"Menu\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n            {page}\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nButtonAppBar.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(ButtonAppBar);\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nexport default function UserDetails(props) {\r\n  return (\r\n    <div\r\n      style={{\r\n        textAlign: \"center\",\r\n        padding: 10,\r\n        maxWidth: 500,\r\n        margin: \"0 auto\"\r\n      }}\r\n    >\r\n      <TextField\r\n        name=\"firstName\"\r\n        value={props.firstNameValue}\r\n        onChange={props.firstName}\r\n        fullWidth\r\n        label=\"First name\"\r\n        type=\"text\"\r\n        margin=\"normal\"\r\n      />\r\n      <br />\r\n      <TextField\r\n        name=\"lastName\"\r\n        value={props.lastNameValue}\r\n        onChange={props.lastName}\r\n        fullWidth\r\n        label=\"Last name\"\r\n        type=\"text\"\r\n        margin=\"normal\"\r\n      />\r\n      <br />\r\n      <TextField\r\n        name=\"email\"\r\n        value={props.emailValue}\r\n        onChange={props.email}\r\n        fullWidth\r\n        label=\"Email\"\r\n        type=\"email\"\r\n        margin=\"normal\"\r\n      />\r\n      <br />\r\n      <Button\r\n        onClick={props.nextStage}\r\n        style={{ padding: \"10px 25px\", margin: 10 }}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n      >\r\n        CONTINUE\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nexport default function UserDetails(props) {\r\n  return (\r\n    <div\r\n      style={{\r\n        textAlign: \"center\",\r\n        padding: 10,\r\n        maxWidth: 500,\r\n        margin: \"0 auto\"\r\n      }}\r\n    >\r\n      <TextField\r\n        name=\"occupation\"\r\n        value={props.OccupationValue}\r\n        onChange={props.Occupation}\r\n        fullWidth\r\n        label=\"Occupation\"\r\n        type=\"text\"\r\n        margin=\"normal\"\r\n      />\r\n      <br />\r\n      <TextField\r\n        name=\"city\"\r\n        value={props.cityValue}\r\n        onChange={props.city}\r\n        fullWidth\r\n        label=\"City\"\r\n        type=\"text\"\r\n        margin=\"normal\"\r\n      />\r\n      <br />\r\n      <TextField\r\n        name=\"bio\"\r\n        value={props.bioValue}\r\n        onChange={props.bio}\r\n        fullWidth\r\n        label=\"Bio\"\r\n        type=\"email\"\r\n        margin=\"normal\"\r\n      />\r\n      <br />\r\n      <Button\r\n        onClick={props.prevStage}\r\n        style={{ padding: \"10px 25px\", margin: 10 }}\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n      >\r\n        BACK\r\n      </Button>\r\n      <Button\r\n        onClick={props.nextStage}\r\n        style={{ padding: \"10px 25px\", margin: 10 }}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n      >\r\n        CONTINUE\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nexport default function Confirm(props) {\r\n  return (\r\n    <div\r\n      style={{\r\n        maxWidth: 400,\r\n        margin: \"0 auto \",\r\n        textAlign: \"center\",\r\n        padding: 10\r\n      }}\r\n    >\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        First Name:\r\n      </Typography>\r\n      <Typography gutterBottom noWrap>\r\n        {props.firstName}\r\n      </Typography>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Last Name:\r\n      </Typography>\r\n      <Typography gutterBottom noWrap>\r\n        {props.lastName}\r\n      </Typography>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Email:\r\n      </Typography>\r\n      <Typography gutterBottom noWrap>\r\n        {props.email}\r\n      </Typography>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Occupation:\r\n      </Typography>\r\n      <Typography gutterBottom noWrap>\r\n        {props.occupation}\r\n      </Typography>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        City:\r\n      </Typography>\r\n      <Typography gutterBottom noWrap>\r\n        {props.city}\r\n      </Typography>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Bio:\r\n      </Typography>\r\n      <Typography gutterBottom noWrap>\r\n        {props.bio}\r\n      </Typography>\r\n      <Button\r\n        onClick={props.prevStage}\r\n        style={{ padding: \"10px 25px\", margin: 10 }}\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n      >\r\n        BACK\r\n      </Button>\r\n      <Button\r\n        onClick={props.nextStage}\r\n        style={{ padding: \"10px 25px\", margin: 10 }}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n      >\r\n        CONFIRM & COUTINUE\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nexport default function Success() {\r\n  useEffect(() => {\r\n    //make HTTP Request\r\n  });\r\n  return (\r\n    <div\r\n      style={{\r\n        maxWidth: \"80%\",\r\n        margin: \"0 auto\",\r\n        padding: 10,\r\n        textAlign: \"center\"\r\n      }}\r\n    >\r\n      <Typography style={{ padding: 10 }} variant=\"h3\">\r\n        Thank You For Your Submisson!\r\n      </Typography>\r\n      <Typography style={{ padding: 10 }} gutterBottom noWrap>\r\n        You will get email with futher instructions.\r\n      </Typography>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\nimport NavBar from \"./NavBar\";\nimport UserDetails from \"./UserDetails\";\nimport PersonalDetails from \"./PersonalDetails\";\nimport Confirm from \"./Confirm\";\nimport Success from \"./Success\";\n\nclass App extends Component {\n  state = {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    occupation: \"\",\n    city: \"\",\n    bio: \"\",\n    stage: 0,\n    pages: [\n      \"Enter User Details\",\n      \"Enter Personal Details\",\n      \"Confirm\",\n      \"Success\"\n    ]\n  };\n  handleChange = ({ target: { value, name } }) => {\n    this.setState({ [name]: value });\n  };\n\n  nextStage = () => {\n    this.setState(prevState => {\n      return {\n        stage: prevState.stage + 1\n      };\n    });\n  };\n  prevStage = () => {\n    this.setState(prevState => {\n      return {\n        stage: prevState.stage - 1\n      };\n    });\n  };\n  render() {\n    const GetCurrentComponent = () => {\n      switch (this.state.stage) {\n        case 0:\n          return (\n            <UserDetails\n              firstNameValue={this.state.firstName}\n              lastNameValue={this.state.lastName}\n              emailValue={this.state.email}\n              firstName={this.handleChange}\n              email={this.handleChange}\n              lastName={this.handleChange}\n              nextStage={this.nextStage}\n            />\n          );\n        case 1:\n          return (\n            <PersonalDetails\n              occupationValue={this.state.occupation}\n              cityValue={this.state.city}\n              bioValue={this.state.bio}\n              occupation={this.handleChange}\n              city={this.handleChange}\n              bio={this.handleChange}\n              nextStage={this.nextStage}\n              prevStage={this.prevStage}\n            />\n          );\n        case 2:\n          return (\n            <Confirm\n              firstName={this.state.firstName}\n              lastName={this.state.lastName}\n              email={this.state.email}\n              occupation={this.state.occupation}\n              city={this.state.city}\n              bio={this.state.bio}\n              nextStage={this.nextStage}\n              prevStage={this.prevStage}\n            />\n          );\n        case 3:\n          return <Success />;\n        default:\n          return null;\n      }\n    };\n\n    return (\n      <div className=\"App\">\n        <NavBar page={this.state.pages[this.state.stage]} />\n        {GetCurrentComponent()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}